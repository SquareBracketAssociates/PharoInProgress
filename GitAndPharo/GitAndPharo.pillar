{
  "author" : "Damien Cassou",
  "title" : "Saving your Pharo code in a Git repository"
}

What is Git and Why Should I Care

! A Tutorial

!! Create your Project

- on Github
- in Pharo
- commit and push

!! Create a Baseline

!! Create a Jenkins job

!! Register on the Pharo Catalog

create a configuration

!! Create a Travis configuration

! Setting up an Advanced Environment: the Merge Driver

- the problem
- git pharo merge driver

! Managing Project Configurations

!!Baselines

what is it. How does it work. How does it compare to ==ConfigurationOf== classes.

When I've written my ==BaselineOfXX== class, how do I execute it so Metacello loads dependencies? We can do that:

[[[
BaselineOfXX project version load
]]]

but you will get errors because Metacello can't locate the XX packages in the package-cache (this happens because a baseline does not define where to find its source code)

!!Configurations

- the #stable definitions

- the #development definition
  - shoud we use a gitfiletree:// url here to get read/write access? If yes, should we add a dependency to GitFileTree?

Answer by Thierry Goubier:

[[[
Easy:

stable version of pillar has github:// reference to Cocoon baseline.
Development version of pillar has gitfiletree:// reference to Cocoon
baseline.

Variant:

ConfigurationOfPillar in catalog browser has github:// reference to
Cocoon. Developpers of pillar write (Metacello baseline: 'pillar';
repository: 'gitfiletree://' ...) with a Pillar baseline referencing
gitfiletree for Cocoon.
]]]

- writing a configuration that depends on a project hosted in git


! Loading Git-based Projects in your Image

- with read-only access
- with read-write access

!! Specifying the README of your Project

! Using Git Branches

! Using Continuous Integration

!! Jenkins

!! Travis

! Example Projects

To learn from others, you might want to have a look at these projects:

- https://github.com/DamienCassou/pharo-jenkins
- https://github.com/Uko/QualityAssistant

! References

links to external documentation
