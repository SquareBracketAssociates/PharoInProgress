{
  "title": "Bloc Architecture",
  "attribution": "Glenn Cavarle"
}

! Architecture Overview


+Bloc Architecture Diagram>file://figures/infrastructure.png|width=50|label=architecture+


Figure*@architecture* illustrates the architectural components which compose the Bloc infrastructure stack.

!! Efficient Engines

Below the ''Bloc Infrastructure'' lies the low-level rendering and windowing engines,
namely *Sparta>Sparta>https://github.com/syrel/Sparta* and *OSWindow>http://smalltalkhub.com/#!/~Pharo/OSWindow*.

==Sparta== is a new Pharo high performance vector graphics librarie that provides bindings to the ==Moz2D== rendering backend.
==Moz2D==, and as result ==Sparta==, has support of native OS graphic engines, as well as cross platform ones.
On all platforms Sparta provides support of ==Cairo== and ==Skia==.
Additionally, high performant ==CoreGraphics== and ==CoreGraphics Accelerated== on Mac OS and ==Direct2D== on Windows.
In total Sparta supports 5 different rendering backends.

==OSWindow== is the Pharo native windowing system that provides bindings to ==SDL2== and ==OpenGL==.

!! Unified Infrastructure

The ''Bloc Infrastructure'' ties together ==Sparta== and ==OSWindow== and makes them available to the layers above in a unified way.
It manages the multi-windowing, the events propagation and the rendering process.
It also provides synchronization (and thread) support related to tasks, animations and rendering.

!! Scene Graph

The ==Bloc== Scene Graph, shown as the top layer in Figure*@architecture*, is the starting point for building a Bloc application.
It provides a hierachical tree of nodes that represents all of the visual elements of a user interface.
It can handle user inputs and can be rendered in a dedicated window.
